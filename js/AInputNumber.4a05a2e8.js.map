{"version":3,"sources":["webpack:///./src/components/re-antdv/AInputNumber.vue?9c1a","webpack:///./src/views/aInputNumber/index.vue?e768","webpack:///./src/views/aInputNumber/index.vue","webpack:///./src/components/re-antdv/AInputNumber.vue","webpack:///src/components/re-antdv/AInputNumber.vue","webpack:///./src/components/re-antdv/AInputNumber.vue?8a99","webpack:///./src/components/re-antdv/AInputNumber.vue?9584","webpack:///src/views/aInputNumber/index.vue","webpack:///./src/views/aInputNumber/index.vue?1f8b","webpack:///./src/views/aInputNumber/index.vue?515d"],"names":["render","_vm","this","_c","_self","attrs","v","replace","on","change","model","value","inputNumberValue","callback","$$v","expression","_v","_s","staticRenderFns","label","staticClass","$event","upStep","inputValue","downStep","ref","min","max","step","placeholder","domProps","inputDisplayValue","onChange","onBlur","isEqual","oldValue","newValue","isNaN","prop","event","props","String","Number","type","default","precision","parser","Function","formatter","data","validValue","getValidValue","toNumber","getInputDisplayValue","toPrecisionAsStep","sValue","mounted","console","log","computed","methods","isValidProps","undefined","getPrecision","valueString","toString","indexOf","parseInt","slice","length","getMaxPrecision","currentValue","ratio","ratioPrecision","stepPrecision","currentValuePrecision","Math","getPrecisionFactor","pow","focused","inputDisplayValueFormat","formatWrapper","$props","decimalSeparator","num","isNotCompleteNumber","abs","toFixed","val","rat","precisionFactor","result","$emit","autoFocus","numberIsTooLarge","round","getValueFromEvent","e","target","trim","parseFloat","inputting","rawInput","args","$listeners","getCurrentValidValue","setValue","blur","originValue","$refs","inputRef","$data","newValueInString","changed","getValue","format","updated","prevProps","nextInputValue","pressingUpOrDown","nextValue","$nextTick","watch","immediate","handler","component","components","MyInputNumber","formatNumber"],"mappings":"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","file":"js/AInputNumber.4a05a2e8.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AInputNumber.vue?vue&type=style&index=0&id=244ebe8d&prod&lang=scss&scoped=true&\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=c304d0ac&prod&lang=scss&scoped=true&\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('MyInputNumber',{attrs:{\"label\":\"My Input Number\",\"min\":0,\"max\":5,\"step\":0.1,\"precision\":1,\"formatter\":(v) => `${v}ç±³`,\"parser\":(v) => v.replace('ç±³', ''),\"placeholder\":\"Enter a number...\"},on:{\"change\":_vm.change},model:{value:(_vm.inputNumberValue),callback:function ($$v) {_vm.inputNumberValue=$$v},expression:\"inputNumberValue\"}}),_c('p',[_vm._v(\"Formatted Input Number Value: \"+_vm._s(_vm.inputNumberValue))]),_c('div',{attrs:{\"role\":\"math\",\"aria-label\":\"6é¤ä»¥4ç­äº1.5\"}},[_c('math',{attrs:{\"xmlns\":\"http://www.w3.org/1998/Math/MathML\"}},[_c('mfrac',[_c('mn',[_vm._v(\"6\")]),_c('mn',[_vm._v(\"4\")])],1),_c('mo',[_vm._v(\"=\")]),_c('mn',[_vm._v(\"1.5\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('label',[_vm._v(_vm._s(_vm.label))]),_c('div',{staticClass:\"my-input-number\"},[_c('div',{staticClass:\"my-input-number-handler-wrap\"},[_c('span',{staticClass:\"my-input-number-handler my-input-number-handler-up\",on:{\"click\":function($event){return _vm.upStep(_vm.inputValue)}}},[_c('i',{staticClass:\"my-input-number-handler-up-inner\"},[_vm._v(\"<\")])]),_c('span',{staticClass:\"my-input-number-handler my-input-number-handler-down\",on:{\"click\":function($event){return _vm.downStep(_vm.inputValue)}}},[_c('i',{staticClass:\"my-input-number-handler-down-inner\"},[_vm._v(\">\")])])]),_c('div',{staticClass:\"my-input-number-input-wrap\"},[_c('input',{ref:\"inputRef\",staticClass:\"my-input-number-input\",attrs:{\"min\":_vm.min,\"max\":_vm.max,\"step\":_vm.step,\"placeholder\":_vm.placeholder},domProps:{\"value\":_vm.inputDisplayValue},on:{\"input\":_vm.onChange,\"blur\":_vm.onBlur}})])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <label>{{ label }}</label>\n    <div class=\"my-input-number\">\n      <div class=\"my-input-number-handler-wrap\">\n        <span\n          class=\"my-input-number-handler my-input-number-handler-up\"\n          @click=\"upStep(inputValue)\"\n          ><i class=\"my-input-number-handler-up-inner\">&lt;</i></span\n        >\n        <span\n          class=\"my-input-number-handler my-input-number-handler-down\"\n          @click=\"downStep(inputValue)\"\n          ><i class=\"my-input-number-handler-down-inner\">&gt;</i></span\n        >\n      </div>\n      <div class=\"my-input-number-input-wrap\">\n        <input\n          class=\"my-input-number-input\"\n          ref=\"inputRef\"\n          :value=\"inputDisplayValue\"\n          :min=\"min\"\n          :max=\"max\"\n          :step=\"step\"\n          :placeholder=\"placeholder\"\n          @input=\"onChange\"\n          @blur=\"onBlur\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// const defaultParser = (value) => value.replace(/[^\\w\\.-]+/g, \"\");\nconst isEqual = (oldValue, newValue) =>\n  newValue === oldValue ||\n  (typeof newValue === \"number\" &&\n    typeof oldValue === \"number\" &&\n    isNaN(newValue) &&\n    isNaN(oldValue));\n\nexport default {\n  model: {\n    prop: \"value\",\n    event: \"change\"\n  },\n  props: {\n    // id: String,\n    label: String,\n    value: [Number, String],\n    min: Number,\n    max: Number,\n    step: {\n      type: Number,\n      default: 1\n    },\n    precision: Number,\n    parser: Function,\n    formatter: Function,\n    placeholder: String\n  },\n  data() {\n    // const inputDisplayValue = this.getInputDisplayValue();\n    const validValue = this.getValidValue(this.toNumber(this.value));\n    return {\n      inputDisplayValue: this.getInputDisplayValue(),\n      inputValue: this.toPrecisionAsStep(validValue),\n      sValue: validValue\n    };\n  },\n  mounted() {\n    const { inputDisplayValue, inputValue, sValue } = this;\n    console.log(\"mounted ...\", inputDisplayValue, inputValue, sValue);\n  },\n  computed: {},\n  methods: {\n    isValidProps(value) {\n      return value !== undefined && value !== null;\n    },\n    getPrecision(value) {\n      if (this.isValidProps(this.precision)) {\n        return this.precision;\n      }\n      const valueString = value.toString();\n      if (valueString.indexOf(\"e-\") >= 0) {\n        return parseInt(valueString.slice(valueString.indexOf(\"e-\") + 2), 10);\n      }\n      let precision = 0;\n      if (valueString.indexOf(\".\") >= 0) {\n        precision = valueString.length - valueString.indexOf(\".\") - 1;\n      }\n      return precision;\n    },\n    getMaxPrecision(currentValue, ratio = 1) {\n      if (this.isValidProps(this.precision)) {\n        return this.precision;\n      }\n      const { step } = this;\n      const ratioPrecision = this.getPrecision(ratio);\n      const stepPrecision = this.getPrecision(step);\n      const currentValuePrecision = this.getPrecision(currentValue);\n      if (!currentValue) {\n        return ratioPrecision + stepPrecision;\n      }\n      return Math.max(currentValuePrecision, ratioPrecision + stepPrecision);\n    },\n    getPrecisionFactor(currentValue, ratio = 1) {\n      const precision = this.getMaxPrecision(currentValue, ratio);\n      return Math.pow(10, precision);\n    },\n    getInputDisplayValue() {\n      const { focused, inputValue, sValue } = this;\n      let inputDisplayValue;\n      if (focused) {\n        inputDisplayValue = inputValue;\n      } else {\n        inputDisplayValue = this.toPrecisionAsStep(sValue);\n      }\n\n      if (inputDisplayValue === undefined || inputDisplayValue === null) {\n        inputDisplayValue = \"\";\n      }\n\n      let inputDisplayValueFormat = this.formatWrapper(inputDisplayValue);\n      if (this.isValidProps(this.$props.decimalSeparator)) {\n        inputDisplayValueFormat = inputDisplayValueFormat\n          .toString()\n          .replace(\".\", this.$props.decimalSeparator);\n      }\n\n      // this.inputDisplayValue = inputDisplayValueFormat;\n\n      return inputDisplayValueFormat;\n    },\n    formatWrapper(num) {\n      // http://2ality.com/2012/03/signedzero.html\n      // https://github.com/ant-design/ant-design/issues/9439\n      if (this.formatter) {\n        return this.formatter(num);\n      }\n      return num;\n    },\n    toPrecisionAsStep(num) {\n      if (this.isNotCompleteNumber(num) || num === \"\") {\n        return num;\n      }\n      const precision = Math.abs(this.getMaxPrecision(num));\n      if (!isNaN(precision)) {\n        return Number(num).toFixed(precision);\n      }\n      return num.toString();\n    },\n    upStep(val, rat = 1) {\n      console.log(\"+ step\");\n      const { step } = this;\n      const precisionFactor = this.getPrecisionFactor(val, rat);\n      const precision = Math.abs(this.getMaxPrecision(val, rat));\n      const result = (\n        (precisionFactor * val + precisionFactor * step * rat) /\n        precisionFactor\n      ).toFixed(precision);\n      const v = this.toNumber(result);\n      console.log(\"+ step\", v);\n      this.inputDisplayValue = this.getInputDisplayValue();\n\n      this.inputValue = v;\n\n      console.log(\"+ step\", v, this.getInputDisplayValue());\n      // const v = this.toNumber(result);\n      // this.inputValue = v;\n      this.$emit(\"change\", v);\n      return this.toNumber(result);\n    },\n    downStep(val, rat = 1) {\n      console.log(\"- step\");\n      const { step } = this;\n      const precisionFactor = this.getPrecisionFactor(val, rat);\n      const precision = Math.abs(this.getMaxPrecision(val, rat));\n      const result = (\n        (precisionFactor * val - precisionFactor * step * rat) /\n        precisionFactor\n      ).toFixed(precision);\n      const v = this.toNumber(result);\n      this.inputDisplayValue = this.getInputDisplayValue();\n      this.inputValue = v;\n\n      // this.inputValue = v;\n      this.$emit(\"change\", v);\n      return this.toNumber(result);\n    },\n    isNotCompleteNumber(num) {\n      return (\n        isNaN(num) ||\n        num === \"\" ||\n        num === null ||\n        (num && num.toString().indexOf(\".\") === num.toString().length - 1)\n      );\n    },\n    toNumber(num) {\n      const { precision, autoFocus } = this;\n      const { focused = autoFocus } = this;\n      // num.length > 16 => This is to prevent input of large numbers\n      const numberIsTooLarge = num && num.length > 16 && focused;\n      if (this.isNotCompleteNumber(num) || numberIsTooLarge) {\n        return num;\n      }\n      if (this.isValidProps(precision)) {\n        return (\n          Math.round(num * Math.pow(10, precision)) / Math.pow(10, precision)\n        );\n      }\n      return Number(num);\n    },\n    getValueFromEvent(e) {\n      // optimize for chinese input expierence\n      // https://github.com/ant-design/ant-design/issues/8196\n      let value = e.target.value.trim().replace(/ã/g, \".\");\n\n      if (this.isValidProps(this.decimalSeparator)) {\n        value = value.replace(this.decimalSeparator, \".\");\n      }\n\n      return value;\n    },\n    getValidValue(value, min = this.min, max = this.max) {\n      let val = parseFloat(value, 10);\n      // https://github.com/ant-design/ant-design/issues/7358\n      if (isNaN(val)) {\n        return value;\n      }\n      if (val < min) {\n        val = min;\n      }\n      if (val > max) {\n        val = max;\n      }\n      return val;\n    },\n    onChange(e) {\n      console.log(\"onChange\", e);\n      if (this.focused) {\n        this.inputting = true;\n      }\n      this.rawInput = this.parser(this.getValueFromEvent(e));\n      //TODO:\n      console.log(\"onChange\", this.rawInput);\n      this.inputValue = this.rawInput;\n      this.$emit(\"change\", this.toNumber(this.rawInput)); // valid number or invalid string\n    },\n    onBlur(...args) {\n      console.log(\"onBlur\", this, this.$listeners);\n      this.inputting = false;\n      this.focused = false;\n      const value = this.getCurrentValidValue(this.inputValue);\n      const newValue = this.setValue(value);\n      if (this.$listeners.blur) {\n        const originValue = this.$refs.inputRef.value;\n        const inputValue = this.getInputDisplayValue({\n          focused: false,\n          sValue: newValue\n        });\n        this.$refs.inputRef.value = inputValue;\n        this.$emit(\"blur\", ...args);\n        this.$refs.inputRef.value = originValue;\n      }\n    },\n    getCurrentValidValue(value) {\n      let val = value;\n      if (val === \"\") {\n        val = \"\";\n      } else if (!this.isNotCompleteNumber(parseFloat(val, 10))) {\n        val = this.getValidValue(val);\n      } else {\n        val = this.sValue;\n      }\n      return this.toNumber(val);\n    },\n    setValue(v, callback) {\n      // trigger onChange\n      const { precision } = this.$props;\n      const newValue = this.isNotCompleteNumber(parseFloat(v, 10))\n        ? null\n        : parseFloat(v, 10);\n      const { sValue: value = null, inputValue = null } = this.$data;\n      // https://github.com/ant-design/ant-design/issues/7363\n      // https://github.com/ant-design/ant-design/issues/16622\n      const newValueInString =\n        typeof newValue === \"number\"\n          ? newValue.toFixed(precision)\n          : `${newValue}`;\n      const changed =\n        newValue !== value || newValueInString !== `${inputValue}`;\n      if (this.value) {\n        this.sValue = newValue;\n        this.inputValue = this.toPrecisionAsStep(v);\n      } else {\n        // always set input value same as value\n        this.inputValue = this.toPrecisionAsStep(this.sValue);\n      }\n      if (changed) {\n        this.$emit(\"change\", newValue);\n      }\n      return newValue;\n    },\n    getValue() {\n      console.log(\"get ...\", this.format);\n      return this.format ? this.format(this.value) : this.value;\n    }\n    // setValue(newValue) {\n    //   console.log(\"set ...\", newValue);\n    //   // å¤çè¾å¥äºä»¶ï¼ç¡®ä¿è¾å¥å¼å¨minåmaxçèå´åï¼å¹¶åºç¨precision\n    //   let parsedValue = parseFloat(newValue);\n    //   console.log(\"parsedValue...\", parsedValue);\n    //   if (!isNaN(parsedValue)) {\n    //     parsedValue = Math.min(this.max, Math.max(this.min, parsedValue));\n    //     if (!isNaN(this.precision)) {\n    //       parsedValue = parseFloat(parsedValue.toFixed(this.precision));\n    //     }\n    //   }\n    //   this.innerValue = parsedValue;\n    // },\n    // handleInput(event) {\n    //   console.log(\"handleInput\", event, event.target.value);\n    //   // å°è¾å¥å¼ä¼ éç»formattedValueï¼ç±computedå±æ§å¤ç\n    //   const v = this.setValue(event.target.value);\n    //   console.log(v);\n    // }\n  },\n  updated() {\n    console.log(\"aaaaa\");\n\n    const { value, max, min } = this.$props;\n    const { focused } = this.$data;\n    const { prevProps } = this;\n    const props = this.$props;\n    // Don't trigger in componentDidMount\n    if (prevProps) {\n      if (\n        !isEqual(prevProps.value, value) ||\n        !isEqual(prevProps.max, max) ||\n        !isEqual(prevProps.min, min)\n      ) {\n        const validValue = focused ? value : this.getValidValue(value);\n        let nextInputValue;\n        if (this.pressingUpOrDown) {\n          nextInputValue = validValue;\n        } else if (this.inputting) {\n          nextInputValue = this.rawInput;\n        } else {\n          nextInputValue = this.toPrecisionAsStep(validValue);\n        }\n        // eslint-disable-line\n        this.sValue = validValue;\n        this.inputValue = nextInputValue;\n      }\n\n      // Trigger onChange when max or min change\n      // https://github.com/ant-design/ant-design/issues/11574\n      const nextValue = \"value\" in props ? value : this.sValue;\n      // ref: null < 20 === true\n      // https://github.com/ant-design/ant-design/issues/14277\n      if (\n        \"max\" in props &&\n        prevProps.max !== max &&\n        typeof nextValue === \"number\" &&\n        nextValue > max\n      ) {\n        this.$emit(\"change\", max);\n      }\n      if (\n        \"min\" in props &&\n        prevProps.min !== min &&\n        typeof nextValue === \"number\" &&\n        nextValue < min\n      ) {\n        this.$emit(\"change\", min);\n      }\n    }\n    this.prevProps = { ...props };\n    this.$nextTick(() => {\n      // this.updatedFunc();\n    });\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler(v) {\n        console.log(\"watch ...\", v);\n        const validValue = this.getValidValue(this.toNumber(v));\n        this.sValue = validValue;\n        this.inputValue = this.toPrecisionAsStep(validValue);\n        this.inputDisplayValue = this.getInputDisplayValue();\n        //\n        console.log(\n          \"watch ...\",\n          this.inputDisplayValue,\n          this.inputValue,\n          this.sValue\n        );\n        this.$emit(\"change\", validValue);\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.my-input-number {\n  box-sizing: border-box;\n  font-variant: tabular-nums;\n  list-style: none;\n  font-feature-settings: \"tnum\";\n  position: relative;\n  width: 100%;\n  height: 32px;\n  color: rgba(0, 0, 0, 0.65);\n  font-size: 14px;\n  line-height: 1.5;\n  background-color: #fff;\n  background-image: none;\n  transition: all 0.3s;\n  display: inline-block;\n  width: 90px;\n  margin: 0;\n  padding: 0;\n  border: 1px solid #d9d9d9;\n  border-radius: 4px;\n}\n.my-input-number:hover {\n  border-color: #40a9ff;\n  border-right-width: 1px !important;\n}\n.my-input-number-handler-wrap {\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 22px;\n  height: 100%;\n  background: #fff;\n  border-left: 1px solid #d9d9d9;\n  border-radius: 0 4px 4px 0;\n  /* opacity: 0; */\n  /* transition: opacity 0.24s linear 0.1s; */\n}\n.my-input-number-handler {\n  position: relative;\n  display: block;\n  width: 100%;\n  height: 50%;\n  overflow: hidden;\n  color: rgba(0, 0, 0, 0.45);\n  font-weight: 700;\n  line-height: 0;\n  text-align: center;\n  transition: all 0.1s linear;\n}\n.my-input-number-input-wrap {\n}\n.my-input-number-handler-up {\n  border-top-right-radius: 4px;\n  cursor: pointer;\n}\n.my-input-number-handler-down {\n  top: 0;\n  border-top: 1px solid #d9d9d9;\n  border-bottom-right-radius: 4px;\n  cursor: pointer;\n}\n.my-input-number-handler-up-inner {\n  top: 50%;\n  margin-top: -5px;\n  text-align: center;\n  transform: rotate(90deg);\n  &:hover {\n    color: #40a9ff;\n  }\n}\n\n.my-input-number-handler-down-inner {\n  top: 50%;\n  margin-top: -6px;\n  text-align: center;\n  transform: rotate(90deg);\n  &:hover {\n    color: #40a9ff;\n  }\n}\n\ni {\n  font-size: 12px;\n  display: inline-block;\n  color: inherit;\n  font-style: normal;\n  line-height: 1;\n  text-align: center;\n  text-transform: none;\n  vertical-align: -0.125em;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  position: absolute;\n  right: 4px;\n  width: 12px;\n  height: 12px;\n  color: rgba(0, 0, 0, 0.45);\n  line-height: 12px;\n  transition: all 0.1s linear;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  user-select: none;\n}\n.my-input-number-input {\n  width: 100%;\n  height: 30px;\n  padding: 0 11px;\n  text-align: left;\n  background-color: transparent;\n  border: 0;\n  border-radius: 4px;\n  outline: 0;\n  transition: all 0.3s linear;\n  -moz-appearance: textfield !important;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 8px;\n}\n\n/* input {\n  width: 100%;\n  padding: 8px;\n  box-sizing: border-box;\n}\n\nbutton {\n  width: 100px;\n  height: 32px;\n} */\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AInputNumber.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AInputNumber.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AInputNumber.vue?vue&type=template&id=244ebe8d&scoped=true&\"\nimport script from \"./AInputNumber.vue?vue&type=script&lang=js&\"\nexport * from \"./AInputNumber.vue?vue&type=script&lang=js&\"\nimport style0 from \"./AInputNumber.vue?vue&type=style&index=0&id=244ebe8d&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"244ebe8d\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div>\n    <MyInputNumber\n      label=\"My Input Number\"\n      v-model=\"inputNumberValue\"\n      :min=\"0\"\n      :max=\"5\"\n      :step=\"0.1\"\n      :precision=\"1\"\n      :formatter=\"(v) => `${v}ç±³`\"\n      :parser=\"(v) => v.replace('ç±³', '')\"\n      placeholder=\"Enter a number...\"\n      @change=\"change\"\n    />\n\n    <p>Formatted Input Number Value: {{ inputNumberValue }}</p>\n    <div role=\"math\" aria-label=\"6é¤ä»¥4ç­äº1.5\">\n      <math xmlns=\"http://www.w3.org/1998/Math/MathML\">\n        <mfrac>\n          <mn>6</mn>\n          <mn>4</mn>\n        </mfrac>\n        <mo>=</mo>\n        <mn>1.5</mn>\n      </math>\n    </div>\n  </div>\n</template>\n\n<script>\nimport MyInputNumber from \"@/components/re-antdv/AInputNumber.vue\";\n\nexport default {\n  components: {\n    MyInputNumber\n  },\n  data() {\n    return {\n      inputNumberValue: 0\n    };\n  },\n  methods: {\n    formatNumber(value) {\n      // æ ¼å¼åè¾å¥å¼ï¼ä¾å¦æ·»å è´§å¸ç¬¦å·ç­\n      return `$${value.toFixed(2)}`;\n    },\n    change(e) {\n      console.log(\"change ...\", e);\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\np {\n  margin-top: 1em;\n  margin-bottom: 1em;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=c304d0ac&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=c304d0ac&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c304d0ac\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}